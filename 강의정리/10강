1.서브쿼리
-작성된 쿼리 내부에 다른 쿼리를 삽입하여 보다 다양하게 데이터를 출력하는 방법
-스칼라 서브쿼리
  1) SELECT에서 사용되는 서브쿼리
  2) 하나의 컬럼에 대해 하나의 행만 반환
  3) 출력되는 하나의 값이 없다면 NULL을 반환
  4) 메인쿼리에서 출력되는 튜플의 수만큼 SELECT에 있는 서브쿼리가 반복실행됨
  5) 스칼라쿼리는 아우터조인으로 변경 가능
-인라인 뷰
  1) FROM부분에서 사용되는 서브쿼리
  2) 가상의 테이블을 동적으로 생성해서 사용 가능
  3) 인라인 뷰는 감싸서 따로 실행해볼 수 있는 독립적인 쿼리
-중첩서브쿼리
  1) WHERE부분에서 주로 사용되는 서브쿼리
  2) 메인쿼리와 관계가 있는지에 따라 상관 서브쿼리와 비상관 서브쿼리로 나뉨
  3) 비상관 서브쿼리: 서브쿼리에서 메인쿼리의 컬럼을 사용하지 않는 서브쿼리, 서브쿼리가 먼저 실행되고 메인쿼리가 실행됨
  4) 상관 서브쿼리: 서브쿼리에서 메인쿼리의 컬럼을 사용하는 서브쿼리, 메인쿼리에서 출력되는 튜플수만큼 서브쿼리가 실행되고 그 결과를 대입해 메인쿼리를 실행

2.연산자
-다중행을 받을 수 있는 연산자
  1) IN: 입력된 다중 행 중에서 일치하는 값들은 모두 출력
  2) ANY: 입력된 다중 행 중에서 하나라도 일치하면 출력(비교연산자와 같이 사용가능)
  3) ALL: 입력된 다중 행 중에서 모두 일치하면 출력(비교연산자와 같이 사용가능)
  4) EXISTS
  -WHERE뒤에 특정 컬럼을 입력하지 않고 바로 EXISTS를 입력
  -SELECT 뒤에 컬럼은 의미 없음
  -조건이 일치할 경우 출력함
  -상관서브쿼리와 비슷하게 메인쿼리의 컬럼을 참조
  5) NOT EXISTS
  -WHERE뒤에 특정 컬럼을 입력하지 않고 바로 NOT EXISTS를 입력
  -SELECT 뒤에 컬럼은 의미 없음
  -조건이 일치할 경우 출력하지 않음
  -상관서브쿼리와 비슷하게 메인쿼리의 컬럼을 참조
-단일행을 받을 수 있는 연산자: =, >=, <, !=등과 같은 비교연산자
